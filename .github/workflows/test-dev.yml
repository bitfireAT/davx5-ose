name: Development tests
on:
  push:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Tests without emulator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3

      - name: Create app/build and gradle configuration cache
        if: ${{ github.ref == 'refs/heads/dev-ose' }}
        uses: actions/cache@v4
        with:
          key: app_build-tests-without-emulator-${{ github.run_id }}
          path: |
            .gradle/configuration-cache
            app/build
      - name: Use app/build and gradle configuration cache
        if: ${{ github.ref != 'refs/heads/dev-ose' }}
        uses: actions/cache/restore@v4
        with:
          key: app_build-tests-without-emulator
          restore-keys: app_build-tests-without-emulator-   # restore cache from dev branch
          path: |
            .gradle/configuration-cache
            app/build

      - name: Run lint and unit tests
        run: ./gradlew app:check
      - name: Archive results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            app/build/outputs/lint*
            app/build/reports
          overwrite: true

  test_on_emulator:
    name: Tests with emulator
    runs-on: ubuntu-latest-4-cores
    strategy:
      matrix:
        api-level: [ 34 ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - uses: gradle/actions/setup-gradle@v3

      - name: Create app/build and gradle configuration cache
        if: ${{ github.ref == 'refs/heads/dev-ose' }}
        uses: actions/cache@v4
        with:
          key: app_build-tests-without-emulator-${{ github.run_id }}
          path: |
            .gradle/configuration-cache
            app/build
      - name: Use app/build and gradle configuration cache
        if: ${{ github.ref != 'refs/heads/dev-ose' }}
        uses: actions/cache/restore@v4
        with:
          key: app_build-tests-without-emulator
          restore-keys: app_build-tests-without-emulator-   # restore cache from dev branch
          path: |
            .gradle/configuration-cache
            app/build

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Cache AVD and APKs
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew app:connectedCheck

      - name: Archive results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            app/build/reports
          overwrite: true
